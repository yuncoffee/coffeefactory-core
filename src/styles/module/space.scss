@use "../var/var";


@each $option in var.$displayList {
    [data-s-display="#{$option}"] {
        display: #{$option};
    }
}

@each $option in var.$flexBoxList {

    [data-s-box="#{$option}"] {
        display: flex;

        @if $option =="v-box" {
            flex-direction: column;
        }
    }
}

@each $option in var.$alignItemsList {
    [data-s-align="#{$option}"] {
        align-items: #{$option};
    }
}

@each $option in var.$justifyContentsList {
    [data-s-justify="#{$option}"] {
        justify-content: #{$option};
    }
}

@each $option in var.$overflowList {
    [data-s-overflow="#{$option}"] {
        overflow: #{$option};
    }

    [data-s-overflow-x="#{$option}"] {
        overflow: #{$option};
    }

    [data-s-overflow-y="#{$option}"] {
        overflow: #{$option};
    }
}

@for $index from map-get(var.$pxSpaceList, "min") through map-get(var.$pxSpaceList, "max") {

    // gap 설정
    @if map-get(var.$pxSpaceList, "option")=="even" {
        @if $index % 2==0 {
            [data-s-gap="#{$index}px"] {
                gap: #{$index}px;
            }
        }
    }

    @else if map-get(var.$pxSpaceList, "option")=="odd" {
        @if $index % 2==1 {
            [data-s-gap="#{$index}px"] {
                gap: #{$index}px;
            }
        }
    }

    @else {
        [data-s-gap="#{$index}px"] {
            gap: #{$index}px;
        }
    }

    // space 설정
    @each $key,
    $value in var.$spaceDirectionList {
        @each $space in var.$spaceTypeList {

            // left, right, top, btm이 있을 경우
            @if $value !=null {
                @if $key =="x" {
                    [data-s-#{$space}-#{$key}="#{$index}px"] {
                        #{$space}: #{$index}px 0;
                    }
                }

                @else if $key =="y" {
                    [data-s-#{$space}-#{$key}="#{$index}px"] {
                        #{$space}: 0 #{$index}px;
                    }
                }

                @else {
                    [data-s-#{$space}-#{$key}="#{$index}px"] {
                        #{$space}-#{$value} : #{$index}px;
                    }

                    [data-s-#{$key}="#{$index}px"] {
                        #{$value}: #{$index}px;
                    }
                }
            }

            // 통합
            @else {
                [data-s-#{$space}="#{$index}px"] {
                    #{$space} : #{$index}px;
                }

            }
        }

    }
}

@each $name,
$value in var.$pxBorderWeightList {
    [data-s-border="#{$name}"] {
        border: #{$value} solid;
    }

    @each $direction,
    $dirValue in var.$spaceDirectionList {

        @if $dirValue !=null {
            [data-s-border-#{$direction}="#{$name}"] {
                border: #{$value} solid;
            }
        }
    }

    @each $style in var.$borderStyleList {

        @each $direction,
        $dirValue in var.$spaceDirectionList {

            @if $dirValue !=null {

                @if $direction =="x" {
                    [data-s-border-#{$direction}="#{$name} #{$style}"] {
                        border: #{$value} 0 #{$style};
                    }
                }

                @else if $direction =="y" {
                    [data-s-border-#{$direction}="#{$name} #{$style}"] {
                        border: 0 #{$value} #{$style};
                    }
                }

                @else {
                    [data-s-border-#{$direction}="#{$name} #{$style}"] {
                        border-#{$dirValue}: #{$value} #{$style};
                    }
                }
            }

            @else {
                [data-s-border="#{$name} #{$style}"] {
                    border: #{$value} #{$style};
                }
            }
        }
    }

}