$grayColorList: (
    "black": #2b2b2b,
    "gray900": #333333,
    "gray800": #424242,
    "gray700": #626262,
    "gray600": #868686,
    "gray500": #c4c4c4,
    "gray400": #e0e0e0,
    "gray300": #ebebeb,
    "gray200": #f6f6f6,
    "gray100": #f8f8f8,
    "white": #ffffff
);

$priColorList: (
    "pri": #00DF9C,
    "sec": #0EC28C
);

$secColorList: (
    // "pri": #2C71D3,
    "scalet": #AD2423,
    "red": #FF2929,
    "orange": #ED7912,
    "yellow": #EF8629,
    "lightgreen": #99C738,
    "green": #56C738,
    "teal": #48B0B7,
    "blue": #2C71D3,
    "deepblue": #0037FF,
    "navy": #133E77,
    "lavendar": #7160e8,
    "violet": #5c2e91,
    "purple": #881798,
    "pink": #e43ba6,
);


$teriColorList: (
    "beige": "",
    "platinum": "",
    "anchor": "",
);

$globalColorList: map-merge($priColorList, $secColorList);

@function derive-rgb-values-from-hex($hex) {
    @return red($hex),
    green($hex),
    blue($hex);
}

// key를 베이스로 컬러 명도 조정
@function setAdjustColor($colorName, $lightness: null, $colorList: $globalColorList) {
    $baseColor: map-get($map: $colorList , $key: $colorName);

    @if $lightness ==null {
        @return derive-rgb-values-from-hex(adjust-color($baseColor));
    }

    @else {
        @return derive-rgb-values-from-hex(adjust-color($baseColor, $lightness: $lightness));
    }
}

// colorType별 명도 설정(setAdjustColor 호출)
@function setColorType($key, $lightList: (null, 20%, 10%, -5%, -10%), $colorList: null) {

    @if $colorList ==null {
        $result: ("base": setAdjustColor($key, nth($lightList, 1)),
            "lightness": setAdjustColor($key, nth($lightList, 2)),
            "light": setAdjustColor($key, nth($lightList, 3)),
            "dark": setAdjustColor($key, nth($lightList, 4)),
            "darkness": setAdjustColor($key, nth($lightList, 5)));

        @return $result;
    }

    @else {
        $result: ("base": setAdjustColor($key, nth($lightList, 1), $colorList),
            "lightness": setAdjustColor($key, nth($lightList, 2), $colorList),
            "light": setAdjustColor($key, nth($lightList, 3), $colorList),
            "dark": setAdjustColor($key, nth($lightList, 4), $colorList),
            "darkness": setAdjustColor($key, nth($lightList, 5), $colorList));

        @return $result;
    }
}

@function keyToColorMap($key) {
    $result: ("#{$key}": setColorType(#{$key}));
    @return $result;
}

@function listToColorMap($list) {
    $result: ();

    @each $key in $list {
        $result: map-merge($result, keyToColorMap($key));
    }

    @return $result;
}

// grayColor 
@function listToGrayMap($list) {
    $result: ();

    @each $key,
    $value in $list {
        $result: map-merge($result, (#{$key}: derive-rgb-values-from-hex($value)));
    }

    @return $result;
}

$globalColorMapList: listToColorMap(map-keys($globalColorList));
$globalGrayMapList: listToGrayMap($grayColorList)