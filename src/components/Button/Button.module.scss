@use "../../styles/var/var";
@use "../../styles/mixin/mixin";


$blockRadius : var(--radius-mid);
$circleRadius: var(--radius-circle);
$roundRadius: var(--radius-round);
$buttonTransition: var(--transition-normal);
$borderStyle: var(--border-weight-regular) solid;
$buttonPadding: 8px 16px;
$buttonMinWidth : 120px;


@mixin setSize($size, $type: "button") {
    height: var(--#{$size});
    min-height: var(--#{$size});
    max-height: var(--#{$size});

    @if $type =="iconButton" {
        width: var(--#{$size});
        min-width: var(--#{$size});
        max-width: var(--#{$size});
    }

    @if $size =="xxl" {
        @include mixin.font500();
    }

    @if $size =="xxs" {
        @include mixin.font300();
    }
}

@mixin setButtonGrayColor($variant) {
    $key: "gray";
    $base: 200;
    $dark: 300;
    $darkness: 400;
    $contents: 700;

    &[data-c-color="#{$key}"] {
        @include mixin.focusStyle;
    }

    @include mixin.fillStyle($variant) {
        &[data-c-color="#{$key}"] {
            background: rgba(var(--#{$key}#{$base}), 1);
            color: rgba(var(--#{$key}#{$contents}), 1);
            border: $borderStyle rgba(var(--#{$key}#{$darkness}), 0);

            &:hover {
                background: rgba(var(--#{$key}#{$dark}), 1);
            }

            &:active {
                border: $borderStyle rgba(var(--#{$key}#{$darkness}), 1);
            }
        }
    }

    @include mixin.lineStyle($variant) {
        &[data-c-color="#{$key}"] {
            background: rgba(var(--#{$key}#{$base}), 0);
            color: rgba(var(--#{$key}#{$contents}), 1);
            border: $borderStyle rgba(var(--#{$key}#{$dark}), 1);

            &:hover {
                background: rgba(var(--#{$key}#{$dark}), 1);
                border: $borderStyle rgba(var(--#{$key}#{$dark}), 1);
                color: rgba(var(--#{$key}#{$contents}), 1);
            }

            &:active {
                border: $borderStyle rgba(var(--#{$key}#{$darkness}), 1);
            }
        }
    }

    @include mixin.ghostStyle($variant) {
        &[data-c-color="#{$key}"] {
            background: rgba(var(--#{$key}#{$base}), 0);
            color: rgba(var(--#{$key}#{$contents}), 1);
            border: $borderStyle rgba(var(--#{$key}#{$dark}), 0);

            &:hover {
                background: rgba(var(--#{$key}#{$dark}), 1);
                border: $borderStyle rgba(var(--#{$key}#{$dark}), 1);
                color: rgba(var(--#{$key}#{$contents}), 1);
            }

            &:active {
                border: $borderStyle rgba(var(--#{$key}#{$darkness}), 1);
            }
        }
    }

    @include mixin.textStyle($variant) {
        &[data-c-color="#{$key}"] {
            background: rgba(var(--#{$key}#{$base}), 0);
            color: rgba(var(--#{$key}#{$contents}), 1);
            border: $borderStyle rgba(var(--#{$key}#{$base}), 0);

            &:hover {
                background: rgba(var(--#{$key}#{$base}), 0);
                color: rgba(var(--#{$key}900), 1);
            }

            &:active {
                border: $borderStyle rgba(var(--#{$key}#{$darkness}), 0);
            }
        }
    }

}

@mixin setButtonColor($variant) {

    @each $key,
    $value in var.$globalColorList {

        &[data-c-color="#{$key}"] {
            @include mixin.focusStyle;
        }


        @include mixin.fillStyle($variant) {
            &[data-c-color="#{$key}"] {
                background: rgba(var(--#{$key}-base), 1);
                color: rgba(var(--white), 1);
                border: $borderStyle rgba(var(--#{$key}-darkness), 0);

                &:hover {
                    background: rgba(var(--#{$key}-dark), 1);
                }

                &:active {
                    border: $borderStyle rgba(var(--#{$key}-darkness), 1);
                }
            }
        }

        @include mixin.lineStyle($variant) {
            &[data-c-color="#{$key}"] {
                background: rgba(var(--#{$key}-base), 0);
                color: rgba(var(--#{$key}-base), 1);
                border: $borderStyle rgba(var(--#{$key}-base), 1);

                &:hover {
                    background: rgba(var(--#{$key}-dark), 1);
                    border: $borderStyle rgba(var(--#{$key}-dark), 1);
                    color: rgba(var(--white), 1);
                }

                &:active {
                    border: $borderStyle rgba(var(--#{$key}-darkness), 1);
                }
            }
        }

        @include mixin.ghostStyle($variant) {
            &[data-c-color="#{$key}"] {
                background: rgba(var(--#{$key}-base), 0);
                color: rgba(var(--#{$key}-base), 1);
                border: $borderStyle rgba(var(--#{$key}-base), 0);

                &:hover {
                    background: rgba(var(--#{$key}-dark), 1);
                    border: $borderStyle rgba(var(--#{$key}-dark), 1);
                    color: rgba(var(--white), 1);
                }

                &:active {
                    border: $borderStyle rgba(var(--#{$key}-darkness), 1);
                }
            }
        }

        @include mixin.textStyle($variant) {
            &[data-c-color="#{$key}"] {
                background: rgba(var(--#{$key}-base), 0);
                color: rgba(var(--#{$key}-base), 1);
                border: $borderStyle rgba(var(--#{$key}-base), 0);

                &:hover {
                    background: rgba(var(--#{$key}-base), 0);
                    color: rgba(var(--#{$key}-dark), 1);
                }

                &:active {
                    border: $borderStyle rgba(var(--#{$key}-darkness), 0);
                }
            }
        }
    }
}

@mixin setButtonRadius($variant) {

    @include mixin.blockStyle($variant) {
        border-radius: $blockRadius;
    }

    @include mixin.boxStyle($variant) {
        border-radius: 0;
    }

    @include mixin.circleStyle($variant) {
        border-radius: $circleRadius;
    }

    @include mixin.roundStyle($variant) {
        border-radius: $roundRadius;
    }
}

@mixin setButtonVariant($variant) {
    @include setButtonGrayColor($variant);
    @include setButtonColor($variant);
    @include setButtonRadius($variant);
}

.button,
.iconButton {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    transition: $buttonTransition;

    @include mixin.font400();

    &::before {
        content: "";
        position: absolute;
        width: 50%;
        height: 150%;
        background: rgba(var(--white), 0);
        border-radius: 50%;
    }

    &:focus {
        outline: 0;
    }

    &:active:not([data-c-variant="text"]) {
        &::before {
            animation: buttonActiveStart var(--transition-normal) ease-in-out forwards;
        }
    }

    @each $variant in var.$variantList {
        &[data-c-variant="#{$variant}"] {
            @include setButtonVariant($variant);
        }
    }
}

.button {
    padding: $buttonPadding;
    min-width: $buttonMinWidth;

    @each $size,
    $value in var.$sizeList {
        &[data-c-size="#{$size}"] {
            @include setSize($size);
        }
    }
}

.iconButton {

    @each $size,
    $value in var.$sizeList {
        &[data-c-size="#{$size}"] {
            @include setSize($size, "iconButton");
        }
    }
}

@keyframes buttonActiveStart {
    0% {
        transform: scale(0);
        background: rgba(var(--white), 0.15);
    }

    100% {
        transform: scale(500%);
        background: rgba(var(--white), 0);
    }
}